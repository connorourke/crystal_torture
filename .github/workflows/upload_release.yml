name: Build and publish to PyPI

on:
  release:
    types: [published]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, macos-14]  # Skip Windows for now

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          # Build for Python 3.10+ (matching your pyproject.toml)
          CIBW_BUILD: "cp310-* cp311-* cp312-* cp313-*"
          
          # Use more modern manylinux for Linux
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          
          # Skip problematic builds
          CIBW_SKIP: "*-win32 *-manylinux_i686 *-musllinux*"
          
          # Linux: Try multiple approaches to install gfortran
          CIBW_BEFORE_ALL_LINUX: |
            echo "=== Checking available package managers ==="
            which dnf && echo "dnf available" || echo "dnf not available"
            which yum && echo "yum available" || echo "yum not available"
            which apt-get && echo "apt-get available" || echo "apt-get not available"
            
            echo "=== Checking for existing gfortran ==="
            which gfortran && echo "gfortran already available" || echo "gfortran not found"
            
            echo "=== Trying to install gfortran ==="
            if which dnf > /dev/null 2>&1; then
              echo "Using dnf..."
              dnf install -y gcc-gfortran gcc-c++ || dnf install -y gcc-fortran gcc-c++
            elif which yum > /dev/null 2>&1; then
              echo "Using yum..."
              yum install -y gcc-gfortran gcc-c++ || yum install -y gcc-fortran gcc-c++
            elif which apt-get > /dev/null 2>&1; then
              echo "Using apt-get..."
              apt-get update && apt-get install -y gfortran g++
            else
              echo "No package manager found, hoping gfortran is already available..."
            fi
            
            echo "=== Final gfortran check ==="
            which gfortran || echo "WARNING: gfortran still not found"
            gfortran --version || echo "WARNING: gfortran not working"
          
          # macOS: Install gfortran
          CIBW_BEFORE_ALL_MACOS: "brew install gcc"
          
          # Test that the wheel imports correctly
          CIBW_TEST_COMMAND: "python -c \"import crystal_torture; print(f'crystal-torture {crystal_torture.__version__} imported successfully')\""

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  build_source:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gfortran

      - name: Build source distribution
        run: |
          python -m pip install --upgrade pip build
          python -m build --sdist

      - name: Upload source artifacts
        uses: actions/upload-artifact@v4
        with:
          name: source
          path: dist/*.tar.gz

  publish:
    name: Publish to PyPI
    needs: [build_wheels, build_source]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download wheel artifacts
        uses: actions/download-artifact@v4
        with:
          name: wheels
          path: dist/

      - name: Download source artifacts
        uses: actions/download-artifact@v4
        with:
          name: source
          path: dist/

      - name: List all artifacts
        run: ls -la dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
