name: build

on: [push, pull_request]

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gfortran
      
      - name: Install Python dependencies and package
        run: |
          python -m pip install --upgrade pip
          
          # Install with editable mode and dev dependencies  
          pip install -e .[dev] -v
          
          # CI workaround: ensure extensions are available in source directory
          # (meson-python sometimes doesn't copy them during editable installs in CI)
          if [ -d "build" ] && [ ! -f crystal_torture/_tort*.so ]; then
            echo "Copying built extensions to source directory..."
            find build -name "*tort*.so" -o -name "*dist*.so" | while read ext; do
              cp "$ext" crystal_torture/
              echo "  ✓ Copied $(basename "$ext")"
            done
          fi
      
      - name: Verify installation
        run: |
          python -c "
          import crystal_torture
          print(f'✓ Crystal Torture {crystal_torture.__version__}')
          
          # Test Fortran extensions
          from crystal_torture import tort, dist
          print(f'✓ Fortran tort module: {bool(tort.tort_mod)}')
          print(f'✓ Fortran dist module: {getattr(dist, \"_DIST_AVAILABLE\", False)}')
          
          # Test basic imports
          from crystal_torture import Node, Cluster, Graph
          print('✓ All imports successful')
          "
      
      - name: Run tests
        run: |
          pytest --cov-config=.coveragerc --cov=crystal_torture --cov-report=lcov tests/
      
      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          file: ./coverage.lcov
          github-token: ${{ secrets.GITHUB_TOKEN }}

  build-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gfortran
      
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      
      - name: Build package
        run: |
          python -m build
      
      - name: Check package
        run: |
          twine check dist/*
