name: build

on: [push, pull_request]

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gfortran
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build pytest pytest-cov coveralls
          # Install in development mode
          pip install -e .[dev]

      - name: Debug meson build process
        run: |
          echo "=== Environment Check ==="
          which gfortran
          gfortran --version
          which meson
          meson --version
          
          echo "=== Direct Meson Build Test ==="
          # Create a temporary build directory and test meson directly
          mkdir debug_build
          cd debug_build
          
          # Run meson setup with verbose output
          echo "Running meson setup..."
          meson setup --verbose . ..
          
          # Run meson compile with verbose output
          echo "Running meson compile..."
          meson compile --verbose
          
          echo "=== Files Created ==="
          # List all files created in build directory
          find . -type f | head -20
          
          echo "=== Shared Libraries Created ==="
          # Look specifically for shared libraries
          find . -name "*.so" -o -name "*.dylib" -o -name "*.dll"
          
          cd ..
      
      - name: Debug extension files
        run: |
          python -c "
          import crystal_torture
          from pathlib import Path
          pkg_dir = Path(crystal_torture.__file__).parent
          print('All files in package:')
          for f in sorted(pkg_dir.iterdir()):
              if f.is_file():
                  print(f'  {f.name}')
          print()
          print('Searching for extensions:')
          for pattern in ['_tort*', 'libdist*', '*.so', '*.pyd']:
              matches = list(pkg_dir.glob(pattern))
              print(f'  {pattern}: {[f.name for f in matches]}')
          "
      
      - name: Verify installation
        run: |
          python -c "import crystal_torture; print(f'Crystal Torture version: {crystal_torture.__version__}')"
          python -c "from crystal_torture import Node, Cluster, Graph; print('Import successful')"
      
      - name: Run tests
        run: |
          pytest --cov-config=.coveragerc --cov=crystal_torture --cov-report=lcov tests/
      
      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          file: ./coverage.lcov
          github-token: ${{ secrets.GITHUB_TOKEN }}

  build-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gfortran
      
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      
      - name: Build package
        run: |
          python -m build
      
      - name: Check package
        run: |
          twine check dist/*
